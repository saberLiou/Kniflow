openapi: 3.0.3
info:
    title: 'Kniflow API Documentation'
    description: 'A RESTful API backend of a simple blog.'
    version: '2021.02'
servers:
    -
        url: 'http://kniflow.test'
paths:
    /api/register:
        post:
            summary: 'Register a user with a personal access token.'
            description: ''
            parameters:
                -
                    in: header
                    name: Content-Type
                    description: ''
                    example: application/x-www-form-urlencoded
                    schema:
                        type: string
                -
                    in: header
                    name: Accept
                    description: ''
                    example: application/json
                    schema:
                        type: string
            responses:
                201:
                    description: '201, when registration succeeded.'
                    content:
                        application/json:
                            schema:
                                type: object
                                example:
                                    jsonapi: { version: '2021.02' }
                                    data: { id: 1, type: users, attributes: { name: saberLiou, email: saberliou@gmail.com, email_verified_at: null, created_at: '1970-01-01 00:00:00', updated_at: '1970-01-01 00:00:00', token: '{personal-access-token}' }, relationships: { tokens: { data: [{ id: 1, tokenable_type: users, tokenable_id: 1, name: Pixel, abilities: ['*'], last_used_at: null, created_at: '1970-01-01 00:00:00', updated_at: '1970-01-01 00:00:00' }] }, categories: [], posts: [] } }
                                    links: { self: 'http://kniflow.test/api/register' }
                                properties:
                                    jsonapi: { type: object, example: { version: '2021.02' } }
                                    data: { type: object, example: { id: 1, type: users, attributes: { name: saberLiou, email: saberliou@gmail.com, email_verified_at: null, created_at: '1970-01-01 00:00:00', updated_at: '1970-01-01 00:00:00', token: '{personal-access-token}' }, relationships: { tokens: { data: [{ id: 1, tokenable_type: users, tokenable_id: 1, name: Pixel, abilities: ['*'], last_used_at: null, created_at: '1970-01-01 00:00:00', updated_at: '1970-01-01 00:00:00' }] }, categories: [], posts: [] } } }
                                    links: { type: object, example: { self: 'http://kniflow.test/api/register' } }
            tags:
                - '01. Authentication'
            requestBody:
                required: true
                content:
                    application/x-www-form-urlencoded:
                        schema:
                            type: object
                            properties:
                                name:
                                    type: string
                                    description: 'The name of the user.'
                                    example: saberLiou
                                email:
                                    type: string
                                    description: 'The email of the user. value 必須是有效的 E-mail。.'
                                    example: saberliou@gmail.com
                                password:
                                    type: string
                                    description: 'The password of the user.'
                                    example: '12345678'
                                device_name:
                                    type: string
                                    description: 'The device of the user.'
                                    example: Pixel
                            required:
                                - name
                                - email
                                - password
                                - device_name
            security: []
components:
    securitySchemes:
        default:
            type: http
            scheme: bearer
            description: ''
security:
    -
        default: []
